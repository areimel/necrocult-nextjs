{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport styles from './FixedSplit.module.scss';\nimport styled from \"styled-components\";\nconst Cell = styled.div`\n\n  $breakpoint: ${props => props.breakpoint || \"1200px\"};\n\n  background: ${props => props.backgroundLeft};\n  background: ${props => props.backgroundRight};\n\n  @media only screen and (max-width : 1200px) { \n    \tmin-height: 50vw;\n    }\n\n  &.fixedWidth{\n    width: ${props => props.fixedWidth || \"50%\"};\n    @media only screen and (max-width : 1200px) { \n    \twidth: 100%;\n    }\n  }\n\n  &.dynamicWidth{\n\twidth: calc(100% -  ${props => props.fixedWidth});\n\t@media only screen and (max-width : 1200px) { \n\t\twidth: 100%;\n\t}\n  }\n\n`;\nexport default function FixedSplit({\n  backgroundLeft,\n  contentLeft,\n  backgroundRight,\n  contentRight,\n  fixedLeft,\n  fixedRight,\n  fixedWidth\n}) {\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.cellWrapper,\n    children: [/*#__PURE__*/_jsx(Cell, {\n      className: styles.cell + (fixedLeft ? \" fixedWidth \" : \" dynamicWidth \"),\n      backgroundLeft: backgroundLeft,\n      fixedWidth: fixedWidth,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: styles.inner,\n        children: contentLeft\n      })\n    }), /*#__PURE__*/_jsx(Cell, {\n      className: styles.cell + (fixedRight ? \" fixedWidth \" : \" dynamicWidth \"),\n      backgroundRight: backgroundRight,\n      fixedWidth: fixedWidth,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.inner,\n        children: [contentRight, /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"p\", {\n          className: \"body\",\n          children: [\"This template element is your standard 2 div side-by-side layout, but with a few twists.\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), \"Like all Holy Mountain Framework elements, it's been built with responsivity and developer ease of use in mind.\"]\n        })]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}